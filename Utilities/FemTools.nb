(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     15349,        400]
NotebookOptionsPosition[     14859,        380]
NotebookOutlinePosition[     15235,        396]
CellTagsIndexPosition[     15192,        393]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Automatically", " ", "generate", " ", "package", " ", "from", " ", 
    "initializtion", " ", "cells", " ", "of", " ", "the", " ", "current", " ",
     "notebook"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"SetOptions", "[", 
   RowBox[{
    RowBox[{"InputNotebook", "[", "]"}], ",", 
    RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.663777636459733*^9, 3.663777712128561*^9}, {
  3.733914406837203*^9, 3.7339144075478926`*^9}, {3.733914733952835*^9, 
  3.7339147356576366`*^9}},
 CellID->484687852],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"A", " ", "fix", " ", "for", " ", "usage", " ", "messages"}], ",",
     " ", 
    RowBox[{
     RowBox[{"from", " ", 
      RowBox[{"http", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
         "questions"}], "/", "3943"}], "/", "usage"}], "-", "displays", "-", 
      "properly", "-", "only", "-", "after", "-", "second", "-", 
      RowBox[{
       RowBox[{"call", "/", "27671"}], "#27671"}]}]}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"System`Dump`fixmessagestring", "[", "System`Dump`s_", "]"}], ":=", 
   RowBox[{"ToString", "@", 
    RowBox[{"InputForm", "@", "System`Dump`s"}]}]}]}]], "Code"],

Cell[BoxData[
 RowBox[{"(*", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
    "Package", " ", "for", " ", "processing", " ", "outputs", " ", "of", " ", 
     "COMSOL", " ", "software", "\n", "ComsolImport", " ", "is", " ", "from", 
     " ", "the", " ", "package", " ", "of", " ", "Karolis", " ", "Misiunas", 
     " ", 
     RowBox[{"(", 
      RowBox[{"k", ".", 
       RowBox[{"misiunas", "@", "gmail"}], ".", "com"}], ")"}]}], ":", " ", 
    "\n", "https", ":"}], "//", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"github", ".", "com"}], "/", "kmisiunas"}], "/", 
     "mathematica"}], "-", 
    RowBox[{
     RowBox[{
      RowBox[{"comsol", "/", "blob"}], "/", "master"}], "/", 
     RowBox[{"COMSOL", ".", "m"}]}]}]}], "\n", " ", "*)"}]], "Input",
 CellChangeTimes->{{3.7346815580198097`*^9, 3.7346815705992413`*^9}, {
  3.7346899066590505`*^9, 3.7346899544765882`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ComsolImport", "::", "usage"}], " ", "=", " ", "\n", "\t", 
   "\"\<ComsolImport[file] imports the .txt file with table results exported \
by COMSOL.\n\t ComsolImport[file, \\\"Headers\\\"] imports column headers of \
the table.\n\t ComsolImport[file, \\\"Info\\\"] gives the additional \
information stored in the file.\>\""}], "\n", "\t "}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Helper", " ", "methods"}], "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "count", " ", "of", " ", "comment", " ", "lines", " ", "in", " ", 
    "exported", " ", "file"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CountCommentLines", "[", "file_String", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"st", ",", " ", "line", ",", " ", "i"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"st", " ", "=", " ", 
       RowBox[{"OpenRead", "[", "file", "]"}]}], ";", "\n", "\t", 
      RowBox[{"line", " ", "=", " ", 
       RowBox[{"Read", "[", 
        RowBox[{"st", ",", " ", "String"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"i", " ", "=", " ", "1"}], ";", "\n", "\t", 
      RowBox[{"While", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"StringMatchQ", "[", 
          RowBox[{"line", ",", " ", 
           RowBox[{
           "StartOfString", " ", "~~", " ", "\"\<%\>\"", " ", "~~", " ", 
            "__"}]}], "]"}], " ", "&&", " ", 
         RowBox[{"line", " ", "=!=", " ", "EndOfFile"}]}], ",", " ", "\n", 
        "\t\t", 
        RowBox[{
         RowBox[{"line", " ", "=", " ", 
          RowBox[{"Read", "[", 
           RowBox[{"st", ",", " ", "String"}], "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"i", " ", "=", " ", 
          RowBox[{"i", " ", "+", " ", "1"}]}], ";"}]}], "\n", "\t", "]"}], 
      ";", "\n", "\t", 
      RowBox[{"Close", "[", "st", "]"}], ";", "\n", "\t", "i"}]}], "\n", 
    "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ComsolImport", "[", 
     RowBox[{"file_String", "?", "FileExistsQ"}], "]"}], " ", ":=", " ", 
    RowBox[{"ComsolImport", "[", 
     RowBox[{"file", ",", " ", "\"\<Table\>\""}], "]"}]}], " ", ";"}], "\n", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"import", " ", "file"}], ",", " ", 
    RowBox[{"but", " ", "skip", " ", "unnecessary", " ", "information"}]}], 
   " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ComsolImport", "[", 
    RowBox[{
     RowBox[{"file_String", "?", "FileExistsQ"}], ",", " ", "\"\<Table\>\""}],
     "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "impStr", "}"}], ",", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "read", " ", "the", " ", "input", " ", "as", " ", "text", " ", "and", 
        " ", "change", " ", "the", " ", "number", " ", "format", " ", "to", 
        " ", "Matemathica"}], "-", "readable"}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"impStr", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"Import", "[", 
          RowBox[{"file", ",", " ", "\"\<Plaintext\>\""}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<i\>\"", "->", "\"\<*I\>\""}], ",", 
           RowBox[{"\"\<E\>\"", "->", "\"\<*10^\>\""}]}], "}"}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"ToExpression", "[", 
       RowBox[{
        RowBox[{"ImportString", "[", 
         RowBox[{"impStr", ",", " ", "\"\<Table\>\""}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"CountCommentLines", "[", "file", "]"}], " ", ";;"}], " ", 
         "]"}], "]"}], "]"}]}]}], " ", "\n", "]"}]}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"import", " ", "only", " ", "column", " ", "headers"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ComsolImport", "[", 
     RowBox[{
      RowBox[{"file_String", "?", "FileExistsQ"}], ",", " ", 
      "\"\<Headers\>\""}], "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"ImportString", "[", " ", 
     RowBox[{
      RowBox[{"StringDrop", "[", " ", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{"file", ",", " ", 
          RowBox[{"{", 
           RowBox[{"\"\<Text\>\"", ",", " ", "\"\<Lines\>\"", ",", " ", 
            RowBox[{
             RowBox[{"CountCommentLines", "[", "file", "]"}], " ", "-", 
             "1"}]}], "}"}]}], "]"}], ",", "\n", "\t", "1"}], "]"}], ",", 
      " ", "\"\<Table\>\"", " ", ",", " ", 
      RowBox[{"\"\<FieldSeparators\>\"", "->", " ", "\"\<  \>\""}]}], "]"}]}],
    ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"get", " ", "files", " ", "information"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ComsolImport", "[", 
     RowBox[{
      RowBox[{"file_String", "?", "FileExistsQ"}], ",", " ", 
      RowBox[{"\"\<Info\>\"", "|", "\"\<Information\>\""}]}], "]"}], " ", ":=",
     " ", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"StringDrop", "[", 
       RowBox[{"#", " ", ",", " ", "1"}], "]"}], " ", "&"}], "/@", " ", 
     RowBox[{"Import", "[", 
      RowBox[{"file", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Text\>\"", ",", " ", "\"\<Lines\>\"", ",", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"CountCommentLines", "[", "file", "]"}], " ", "-", "2"}], 
          "]"}]}], "}"}]}], "]"}]}]}], " ", ";"}], "\n", "\t"}], "\n", 
 RowBox[{"End", "[", "]"}]}], "Code",
 CellChangeTimes->{{3.7346812043050838`*^9, 3.73468120431409*^9}, 
   3.734681531420359*^9, {3.7346839859531565`*^9, 3.7346840108219433`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SplitParametricSweepTable", "::", "usage"}], " ", "=", " ", 
   "\"\<SplitParametricSweepTable[list_,nPars_]\n\tTransform table \
{{\!\(\*SubscriptBox[\(s\), \(1\)]\), \!\(\*SubscriptBox[\(s\), \(2\)]\), \
..., \!\(\*SubscriptBox[\(x\), \(1\)]\), \!\(\*SubscriptBox[\(x\), \
\(2\)]\),...},...} to a new form {\!\(\*SubscriptBox[\(s\), \(1\)]\), \
{..{\!\(\*SubscriptBox[\(s\), \(n\)]\),{\!\(\*SubscriptBox[\(x\), \(1\)]\), \
\!\(\*SubscriptBox[\(x\), \(2\)]\),...},...}...}} \n\twhere each of the \
parameters \!\(\*SubscriptBox[\(s\), \(1\)]\) runs over its own list \
dimension. nPar_ is the number of parameters \!\(\*SubscriptBox[\(s\), \(i\)]\
\)\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"SplitParametricSweepTable", "[", 
   RowBox[{
    RowBox[{"list_", "?", "MatrixQ"}], ",", " ", "1"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "par1ValList", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"par1ValList", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"list", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"Table", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"par1", ",", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"list", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "par1"}], ")"}], 
             "&"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", 
            RowBox[{"2", ";;"}]}], "]"}], "]"}]}], "}"}], ",", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{"par1", ",", "par1ValList"}], "}"}]}], "\n", "\t", "]"}]}]}], 
   "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"SplitParametricSweepTable", "[", 
   RowBox[{
    RowBox[{"list_", "?", "MatrixQ"}], ",", 
    RowBox[{"nPars_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", ">", "1"}], ")"}], "&"}], ")"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"par1ValList", ",", "subList"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"par1ValList", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"list", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"Table", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"subList", "=", 
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{"list", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "par1"}], ")"}], 
             "&"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", 
            RowBox[{"2", ";;"}]}], "]"}], "]"}]}], ";", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{"par1", ",", 
          RowBox[{"SplitParametricSweepTable", "[", 
           RowBox[{"subList", ",", " ", 
            RowBox[{"nPars", "-", "1"}]}], "]"}]}], "}"}]}], ",", "\n", 
       "\t\t", 
       RowBox[{"{", 
        RowBox[{"par1", ",", "par1ValList"}], "}"}]}], "\n", "\t", "]"}]}]}], 
   "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.734681246696724*^9, 3.7346812648277984`*^9}, {
   3.7346813286313767`*^9, 3.734681333341631*^9}, {3.734681590123011*^9, 
   3.734681591358634*^9}, {3.734683173847108*^9, 3.73468318032644*^9}, {
   3.7346832151133223`*^9, 3.7346832331626387`*^9}, {3.7346832744122343`*^9, 
   3.7346832796057234`*^9}, {3.734683327683323*^9, 3.734683447675173*^9}, {
   3.734683592952998*^9, 3.7346836343510313`*^9}, {3.7346838209094844`*^9, 
   3.7346838211522865`*^9}, {3.7346838930287914`*^9, 3.734683916125293*^9}, {
   3.734685803821785*^9, 3.7346859524574986`*^9}, {3.7346860134817247`*^9, 
   3.734686039632868*^9}, {3.734686106402915*^9, 3.734686143684801*^9}, {
   3.734686209468462*^9, 3.7346862473932095`*^9}, {3.734686285918944*^9, 
   3.7346862989230747`*^9}, {3.734686403615593*^9, 3.7346865278004665`*^9}, {
   3.7346867255764*^9, 3.7346868340940714`*^9}, 3.734688844366815*^9, {
   3.7346893204641953`*^9, 3.734689406019963*^9}, {3.734689526920562*^9, 
   3.734689553148584*^9}, {3.734690074672963*^9, 3.734690075517417*^9}, {
   3.7346935612392035`*^9, 3.734693563592074*^9}, {3.734693668028736*^9, 
   3.7346936692907267`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SplitByModes", "::", "usage"}], " ", "=", " ", 
  "\"\<SplitByModes[list_]\>\""}], "\n", 
 RowBox[{
  RowBox[{"SplitByModes", "[", "list_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"par1", ",", " ", "nModes"}], "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"par1", "=", 
      RowBox[{"list", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"nModes", "=", 
      RowBox[{"Count", "[", 
       RowBox[{"list", ",", 
        RowBox[{"{", 
         RowBox[{"par1", ",", "__"}], "}"}], ",", "1"}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"list", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"-", "1"}], ",", "nModes"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nModes"}], "}"}]}], "]"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.7346897519212275`*^9, 3.734689781517189*^9}, {
  3.7346899912690973`*^9, 3.734690013071124*^9}, {3.7346900480363874`*^9, 
  3.7346900727318306`*^9}, {3.7346904031520348`*^9, 3.7346904088294067`*^9}, {
  3.7346904410192146`*^9, 3.7346904417584457`*^9}, {3.734690477961734*^9, 
  3.734690535517183*^9}, {3.7346907637278776`*^9, 3.7346908517042437`*^9}, {
  3.7346920732039967`*^9, 3.734692091598158*^9}, {3.7346921342574205`*^9, 
  3.7346922351701794`*^9}, {3.734692377363166*^9, 3.734692381807046*^9}, {
  3.7346926159063215`*^9, 3.734692633894106*^9}, {3.734692680107059*^9, 
  3.734692705538597*^9}, {3.734692742616498*^9, 3.734692775968977*^9}, {
  3.734692818387144*^9, 3.7346928197547607`*^9}, {3.734692891430286*^9, 
  3.7346928934831004`*^9}}]
},
AutoGeneratedPackage->Automatic,
WindowSize->{912, 657},
WindowMargins->{{Automatic, 163}, {35, Automatic}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 618, 15, 50, "Input",
 CellID->484687852],
Cell[1179, 37, 771, 21, 69, "Code"],
Cell[1953, 60, 907, 23, 107, "Input"],
Cell[2863, 85, 5711, 144, 772, "Code"],
Cell[8577, 231, 4493, 104, 375, "Code"],
Cell[13073, 337, 1782, 41, 141, "Code"]
}
]
*)

