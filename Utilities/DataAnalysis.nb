(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     29775,        751]
NotebookOptionsPosition[     29248,        729]
NotebookOutlinePosition[     29624,        745]
CellTagsIndexPosition[     29581,        742]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Automatically", " ", "generate", " ", "package", " ", "from", " ", 
    "initializtion", " ", "cells", " ", "of", " ", "the", " ", "current", " ",
     "notebook"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"SetOptions", "[", 
   RowBox[{
    RowBox[{"InputNotebook", "[", "]"}], ",", 
    RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.663777636459733*^9, 3.663777712128561*^9}, {
  3.733914406837203*^9, 3.7339144075478926`*^9}, {3.733914733952835*^9, 
  3.7339147356576366`*^9}},
 CellID->484687852],

Cell[CellGroupData[{

Cell["Fitting", "Section",
 CellChangeTimes->{{3.7339177915338836`*^9, 3.7339177947598133`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FindLogFit", "::", "usage"}], "=", 
   "\"\<FindLogFit[data_, expr_, rest__]. The function is equivalent to \
FindFit, but works in log Y scale.\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"FindLogFit", "[", 
   RowBox[{"data_", ",", "expr_", ",", "rest__"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "logData", "}"}], ",", "\n", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "The", " ", "function", " ", "is", " ", "equivalent", " ", "to", " ", 
       "FindFit"}], ",", " ", 
      RowBox[{
      "but", " ", "works", " ", "in", " ", "log", " ", "Y", " ", "scale"}]}], 
     "*)"}], "\n", "\t", 
    RowBox[{
     RowBox[{"logData", "=", 
      RowBox[{"Which", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"VectorQ", "[", "data", "]"}], ",", 
        RowBox[{"Log", "[", 
         RowBox[{"Abs", "[", "data", "]"}], "]"}], ",", 
        RowBox[{"(*", 
         RowBox[{"data", " ", "list"}], "*)"}], "\n", "\t\t", 
        RowBox[{"XYListQ", "[", "data", "]"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"Log", "[", 
            RowBox[{"Abs", "[", 
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], "}"}], 
         "]"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{"XY", " ", "data"}], "*)"}], "\n", "\t\t", "True", ",", 
        RowBox[{"{", "}"}]}], "\n", "\t", "]"}]}], ";", "\n", "\t", 
     RowBox[{"FindFit", "[", 
      RowBox[{"logData", ",", 
       RowBox[{"Log", "[", "expr", "]"}], ",", "rest"}], "]"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.733917815068692*^9, 3.733917821169559*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FitRangeSelector", "::", "usage"}], "=", 
   "\"\<FitRangeSelector[fitRanges_,traceList_,OptionsPattern[{logYPlot->\
False,logXPlot-> False}]]\n\tFunction allows to select ranges for each \
element of the list of traces (presumably for future use in fitting)\n\tLeft \
click - set lower x interval boundary at current mouse position; right click \
- set upper x interval boundary at current mouse position.\n\tfitRanges is an \
empty variable to which the list of ranges will be assigned.\>\""}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"FitRangeSelector", ",", "HoldFirst"}], "]"}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "Hold", " ", "attribute", " ", "for", " ", "the", " ", "\"\<fitRanges\>\"",
     " ", "variable", " ", "is", " ", "needed", " ", "for", " ", "being", " ",
     "able", " ", "to", " ", "clear", " ", "the", " ", "variable", " ", "if", 
    " ", "it", " ", "was", " ", "already", " ", "defined"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"FitRangeSelector", "[", 
    RowBox[{"fitRanges_", ",", "traceList_", ",", 
     RowBox[{"OptionsPattern", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"logYPlot", "->", "False"}], ",", 
        RowBox[{"logXPlot", "->", " ", "False"}]}], "}"}], "]"}]}], "]"}], ":=", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "epList", ",", " ", "LowerLine", ",", "UpperLine", ",", "minList", ",", 
       "maxList", ",", "plotF"}], "}"}], ",", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{"right", " ", "and", " ", "left", " ", "cursor", " ", "lines"}],
       "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"minList", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{"tr", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"tr", ",", "traceList"}], "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"maxList", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"tr", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"tr", ",", "traceList"}], "}"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"LowerLine", "[", 
        RowBox[{"i_", ",", "x_"}], "]"}], ":=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"CMYKColor", "[", 
          RowBox[{"1.", ",", "0", ",", "0", ",", ".4"}], "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"2", 
               RowBox[{"minList", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"2", 
               RowBox[{"maxList", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}], "}"}], "]"}]}], 
        "}"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"UpperLine", "[", 
        RowBox[{"i_", ",", "x_"}], "]"}], ":=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"CMYKColor", "[", 
          RowBox[{"0.", ",", "0.2", ",", "0.5", ",", ".1"}], "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"2", 
               RowBox[{"minList", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"2", 
               RowBox[{"maxList", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}], "}"}], "]"}]}], 
        "}"}]}], ";", "\n", "\t", 
      RowBox[{"plotF", "=", 
       RowBox[{"Which", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "logYPlot", "]"}], "&&", 
          RowBox[{"OptionValue", "[", "logXPlot", "]"}]}], ",", 
         "ListLogLogPlot", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"OptionValue", "[", "logYPlot", "]"}], "&&", 
          RowBox[{"(", 
           RowBox[{"!", 
            RowBox[{"OptionValue", "[", "logXPlot", "]"}]}], ")"}]}], ",", 
         "ListLogPlot", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"!", 
            RowBox[{"OptionValue", "[", "logYPlot", "]"}]}], ")"}], "&&", 
          RowBox[{"OptionValue", "[", "logXPlot", "]"}]}], ",", 
         "ListLogLinearPlot", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"!", 
            RowBox[{"OptionValue", "[", "logYPlot", "]"}]}], ")"}], "&&", 
          RowBox[{"(", 
           RowBox[{"!", 
            RowBox[{"OptionValue", "[", "logXPlot", "]"}]}], ")"}]}], ",", 
         "ListPlot"}], "\n", "\t", "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "epList", " ", "is", " ", "the", " ", "list", " ", "of", " ", 
        "cursors", " ", "to", " ", "display", " ", "the", " ", "chosen", " ", 
        "boundaries"}], "*)"}], "\n", "\t", 
      RowBox[{"epList", "=", 
       RowBox[{"Table", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"LowerLine", "[", 
            RowBox[{"i", ",", 
             RowBox[{"traceList", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"UpperLine", "[", 
            RowBox[{"i", ",", 
             RowBox[{"traceList", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", 
                RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "]"}]}], 
          "}"}], "\n", "\t", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "traceList", "]"}]}], "}"}]}], "]"}]}], ";",
       "\n", "\t", 
      RowBox[{"Clear", "[", "fitRanges", "]"}], ";", "\n", "\t", 
      RowBox[{"fitRanges", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "traceList", "]"}]}], "}"}]}], "]"}]}], ";",
       "\n", "\n", "\t", 
      RowBox[{"Manipulate", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"EventHandler", "[", 
         RowBox[{
          RowBox[{"plotF", "[", 
           RowBox[{
            RowBox[{"traceList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"Joined", "->", " ", "True"}], ",", 
            RowBox[{"ImageSize", "->", "Large"}], ",", 
            RowBox[{"PlotRange", "->", "Full"}], ",", 
            RowBox[{"Epilog", "->", " ", 
             RowBox[{"epList", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ",", "\n", "\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<MouseClicked\>\"", ",", "1"}], "}"}], ":>", 
            RowBox[{"(", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"fitRanges", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"MousePosition", "[", "\"\<Graphics\>\"", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t\t", 
              RowBox[{
               RowBox[{"epList", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"LowerLine", "[", 
                  RowBox[{"i", ",", 
                   RowBox[{"fitRanges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}], ",", " ", 
                 RowBox[{"epList", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}]}], ";"}], 
             "\n", "\t\t", ")"}]}], "}"}], ",", "\n", "\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<MouseClicked\>\"", ",", "2"}], "}"}], ":>", 
            RowBox[{"(", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"fitRanges", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"MousePosition", "[", "\"\<Graphics\>\"", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t\t", 
              RowBox[{
               RowBox[{"epList", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "=", 
               RowBox[{"{", " ", 
                RowBox[{
                 RowBox[{"epList", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"UpperLine", "[", 
                  RowBox[{"i", ",", 
                   RowBox[{"fitRanges", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], "}"}]}],
               ";"}], "\n", "\t\t", ")"}]}], "}"}]}], "\n", "\t", "]"}], ",", 
        "\n", "\t", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "traceList", "]"}], ",", "1"}], "}"}]}], 
       "]"}]}], ",", "\n", 
     RowBox[{"SaveDefinitions", "->", "True"}]}], "]"}]}]}]}], "Code",
 CellChangeTimes->{{3.7339178387628145`*^9, 3.7339178414528418`*^9}, {
  3.7339182639670424`*^9, 3.73391826830243*^9}, {3.733918500368207*^9, 
  3.733918500792617*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FindFitSeries", "::", "usage"}], "=", 
   "\"\<FindFitSeries[traceList_,fitModel_,pars_,vars_,fitRanges_:Full]\n\t\
Function applies FindFit[] to each element in the list of 2D data traces \
traceList.\n\nInput:\n\tfitModel, pars and vars are the corresponding \
elements for FindFit[]. fitModel and pars can be either a single element, or \
a list of corresponding elements for each trace in traceList.\n\tfitRanges is \
an optional argument, alowing pre-selection of the data to be fitted. It can \
be\n\t1. single range {Subscript[x, min],Subscript[x, max]}\n\t2. a list of \
ranges {\\!\\(\\*SubsuperscriptBox[\\(x\\), \\(i\\), \
\\(min\\)]\\),\\!\\(\\*SubsuperscriptBox[\\(x\\), \\(i\\), \\(max\\)]\\)} for \
every traceList[[i]]\n\t3. a single Interval\n\t4. a list of Interval's for \
every traceList[[i]]\n\nOutput:\n\tlist of the fit replacement rules \n\n\
Options: \n\tFitFunction can be either FindFit (by default) of \
FindLogFit\>\""}], "\n", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FindFitSeries", "[", 
    RowBox[{"traceList_", ",", "fitModel_", ",", "pars_", ",", "vars_", ",", 
     RowBox[{"fitRanges", ":", 
      RowBox[{"Except", "[", 
       RowBox[{"_", "?", "OptionQ"}], "]"}], ":", "Full"}], ",", 
     RowBox[{"OptionsPattern", "[", 
      RowBox[{"{", 
       RowBox[{"FitFunction", "->", "FindFit"}], "}"}], "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dataList", ",", "fitModelsList", ",", "parsList", ",", 
       "frIntervalsList"}], "}"}], ",", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "reduce", " ", "the", " ", "input", " ", "parameters", " ", "from", 
        " ", "all", " ", "the", " ", "various", " ", "acceptable", " ", 
        "forms", " ", "to", " ", "a", " ", "single", " ", "one"}], " ", 
       "\[Dash]", " ", "lists"}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"fitRanges", "===", "Full"}], ",", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{
         "if", " ", "the", " ", "entire", " ", "traces", " ", "are", " ", 
          "to", " ", "be", " ", "fitted"}], "*)"}], "\n", "\t\t", 
        RowBox[{"dataList", "=", "traceList"}], ",", "\n", "\t\t", "\n", 
        "\t\t", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"if", " ", "some", " ", "range", " ", "of", " ", "x"}], "-", 
          RowBox[{
          "values", " ", "is", " ", "to", " ", "be", " ", "selected", " ", 
           "first"}]}], "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"frIntervalsList", "=", 
          RowBox[{"Which", "[", "\n", "\t\t", 
           RowBox[{"(*", 
            RowBox[{
            "case", " ", "of", " ", "single", " ", "fit", " ", "interval", 
             " ", "for", " ", "all", " ", "the", " ", "traces"}], "*)"}], 
           "\n", "\t\t", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Head", "[", "fitRanges", "]"}], "===", "Interval"}], 
             ")"}], ",", "\n", "\t\t\t", 
            RowBox[{"Table", "[", 
             RowBox[{"fitRanges", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "traceList", "]"}]}], "}"}]}], "]"}], 
            ",", "\n", "\t\t", 
            RowBox[{"(*", 
             RowBox[{
             "case", " ", "of", " ", "individual", " ", "fit", " ", 
              "intervals"}], "*)"}], "\n", "\t\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Head", "[", "fitRanges", "]"}], "===", "List"}], 
              ")"}], "&&", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Head", "[", 
                RowBox[{"fitRanges", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "===", "Interval"}], 
              ")"}]}], ",", "\n", "\t\t\t", "fitRanges", ",", "\n", "\t\t", 
            RowBox[{"(*", 
             RowBox[{
             "case", " ", "of", " ", "single", " ", "fit", " ", "range", " ", 
              "for", " ", "all", " ", "the", " ", "traces"}], "*)"}], "\n", 
            "\t\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Head", "[", "fitRanges", "]"}], "===", "List"}], 
              ")"}], "&&", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Head", "[", 
                RowBox[{"fitRanges", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "=!=", "Interval"}], 
              ")"}], "&&", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Depth", "[", "fitRanges", "]"}], "==", " ", "2"}], 
              ")"}]}], ",", " ", "\n", "\t\t\t", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Interval", "[", "fitRanges", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "traceList", "]"}]}], "}"}]}], "]"}], 
            ",", "\n", "\t\t", 
            RowBox[{"(*", 
             RowBox[{
             "case", " ", "of", " ", "individual", " ", "fit", " ", 
              "ranges"}], "*)"}], "\n", "\t\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Head", "[", "fitRanges", "]"}], "===", "List"}], 
              ")"}], "&&", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Head", "[", 
                RowBox[{"fitRanges", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "===", "List"}], 
              ")"}], "&&", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Depth", "[", "fitRanges", "]"}], "==", " ", "3"}], 
              ")"}]}], ",", " ", "\n", "\t\t\t", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Interval", "[", 
               RowBox[{"fitRanges", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "traceList", "]"}]}], "}"}]}], "]"}]}],
            "\n", "\t\t", "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"dataList", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Select", "[", 
             RowBox[{
              RowBox[{"traceList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"IntervalMemberQ", "[", 
                RowBox[{
                 RowBox[{"frIntervalsList", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "[", "traceList", "]"}]}], "}"}]}], "]"}]}], 
         ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
      RowBox[{"fitModelsList", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "fitModel", "]"}], "=!=", " ", "List"}], ",", 
         "\n", "\t\t", 
         RowBox[{"Table", "[", 
          RowBox[{"fitModel", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "traceList", "]"}]}], "}"}]}], "]"}], ",",
          "\n", "\t\t", "fitModel"}], "\n", "\t", "]"}]}], ";", "\n", "\t", 
      RowBox[{"parsList", "=", 
       RowBox[{"If", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "pars", "]"}], "<=", "2"}], " ", "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Depth", "[", "pars", "]"}], "==", "3"}], " ", "&&", " ", 
            RowBox[{
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{"Head", "/@", 
               RowBox[{"Flatten", "[", "pars", "]"}]}], "]"}], "=!=", " ", 
             RowBox[{"{", "Symbol", "}"}]}]}], ")"}]}], " ", ",", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"pars", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "traceList", "]"}]}], "}"}]}], "]"}], ",",
          "\n", "\t\t", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"pars", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "traceList", "]"}]}], "}"}]}], "]"}]}], 
        "\n", "\t", "]"}]}], ";", "\n", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"perform", " ", "fitting"}], "*)"}], "\n", "\t", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "FitFunction", "]"}], "[", 
         RowBox[{
          RowBox[{"dataList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"fitModelsList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"parsList", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "vars"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "traceList", "]"}]}], "}"}]}], "]"}]}]}], 
    "\n", "]"}]}], ";"}], "\n"}], "Code",
 CellChangeTimes->{{3.7339178705336475`*^9, 3.733917913339658*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FitQualityCheck", "::", "usage"}], "=", 
   "\"\<FitQualityCheck[traceList_,fitRanges_,fitModel_,fitParameters_,fitVar_\
:x]\n\tPlots fits on top of the orifinal data.\n\nInput:\n\tfitModel needs to \
have fitVar as the free variable\n\tfitRanges should be either a single \
fitting interval for all the traces in traceList, or the list of individual \
fitting intervals for traceList[[i]]\n\nOptions:\n\tlogYPlot->False,\n\t\
logXPlot->False\>\""}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"FitQualityCheck", "[", 
   RowBox[{
   "traceList_", ",", "fitRanges_", ",", "fitModel_", ",", "fitParameters_", 
    ",", 
    RowBox[{"fitVar", ":", 
     RowBox[{"Except", "[", 
      RowBox[{"_", "?", "OptionQ"}], "]"}], ":", "Global`x"}], ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"logYPlot", "->", "False"}], ",", 
       RowBox[{"logXPlot", "->", " ", "False"}]}], "}"}], "]"}]}], "]"}], ":=",
   "\n", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xPlotRanges", ",", "cPlotF", ",", "dPlotF"}], "}"}], ",", "\n", 
    "\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "fitRanges", "]"}], "=!=", "List"}], ",", " ", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<Fit ranges is not a list\>\"", "]"}], ";", 
        RowBox[{"Return", "[", "]"}]}]}], "]"}], ";", "\n", "\t\t", 
     RowBox[{"xPlotRanges", "=", 
      RowBox[{"Which", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Depth", "[", "fitRanges", "]"}], "==", " ", "2"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
         "case", " ", "of", " ", "single", " ", "fit", " ", "range", " ", 
          "for", " ", "all", " ", "the", " ", "traces"}], "*)"}], "\n", 
        "\t\t\t", 
        RowBox[{"Table", "[", 
         RowBox[{"fitRanges", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "traceList", "]"}]}], "}"}]}], "]"}], ",", 
        "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Depth", "[", "fitRanges", "]"}], "==", " ", "3"}], ",", " ", 
        RowBox[{"(*", 
         RowBox[{
         "case", " ", "of", " ", "individual", " ", "fit", " ", "ranges"}], 
         "*)"}], "\n", "\t\t\t", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"fitRanges", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "traceList", "]"}]}], "}"}]}], "]"}]}], 
       "\n", "\t\t", "]"}]}], ";", "\n", "\n", "\t\t", 
     RowBox[{"cPlotF", "=", 
      RowBox[{"Which", "[", " ", 
       RowBox[{"(*", 
        RowBox[{
        "chose", " ", "continuous", " ", "plotting", " ", "function"}], 
        "*)"}], "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "logYPlot", "]"}], "&&", 
         RowBox[{"OptionValue", "[", "logXPlot", "]"}]}], ",", "LogLogPlot", 
        ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"OptionValue", "[", "logYPlot", "]"}], "&&", 
         RowBox[{"(", 
          RowBox[{"!", 
           RowBox[{"OptionValue", "[", "logXPlot", "]"}]}], ")"}]}], ",", 
        "LogPlot", ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"!", 
           RowBox[{"OptionValue", "[", "logYPlot", "]"}]}], ")"}], "&&", 
         RowBox[{"OptionValue", "[", "logXPlot", "]"}]}], ",", 
        "LogLinearPlot", ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"!", 
           RowBox[{"OptionValue", "[", "logYPlot", "]"}]}], ")"}], "&&", 
         RowBox[{"(", 
          RowBox[{"!", 
           RowBox[{"OptionValue", "[", "logXPlot", "]"}]}], ")"}]}], ",", 
        "Plot"}], "\n", "\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"dPlotF", "=", 
      RowBox[{"Which", "[", " ", 
       RowBox[{"(*", 
        RowBox[{"chose", " ", "discrete", " ", "plotting", " ", "function"}], 
        "*)"}], "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "logYPlot", "]"}], "&&", 
         RowBox[{"OptionValue", "[", "logXPlot", "]"}]}], ",", 
        "ListLogLogPlot", ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"OptionValue", "[", "logYPlot", "]"}], "&&", 
         RowBox[{"(", 
          RowBox[{"!", 
           RowBox[{"OptionValue", "[", "logXPlot", "]"}]}], ")"}]}], ",", 
        "ListLogPlot", ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"!", 
           RowBox[{"OptionValue", "[", "logYPlot", "]"}]}], ")"}], "&&", 
         RowBox[{"OptionValue", "[", "logXPlot", "]"}]}], ",", 
        "ListLogLinearPlot", ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"!", 
           RowBox[{"OptionValue", "[", "logYPlot", "]"}]}], ")"}], "&&", 
         RowBox[{"(", 
          RowBox[{"!", 
           RowBox[{"OptionValue", "[", "logXPlot", "]"}]}], ")"}]}], ",", 
        "ListPlot"}], "\n", "\t\t", "]"}]}], ";", "\n", "\n", "\t\t", 
     RowBox[{"Do", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Print", "[", "i", "]"}], ";", "\n", "\t\t\t", 
        RowBox[{"Print", "[", "\n", "\t\t\t\t", 
         RowBox[{"Show", "[", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"dPlotF", "[", 
            RowBox[{
             RowBox[{"traceList", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"PlotRange", "->", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"xPlotRanges", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "Full"}], "}"}]}]}], 
            "]"}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{"cPlotF", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", "fitModel", ")"}], "/.", 
              RowBox[{"fitParameters", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"fitVar", ",", 
               RowBox[{"xPlotRanges", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"xPlotRanges", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"PlotStyle", "->", 
              RowBox[{"Directive", "[", 
               RowBox[{"Red", ",", "Thin"}], "]"}]}], ",", 
             RowBox[{"PlotRange", "->", "Full"}]}], "]"}]}], "\n", "\t\t\t\t",
           "]"}], "\n", "\t\t\t", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "traceList", "]"}]}], "}"}]}], "]"}]}]}], 
   "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.733917931615965*^9, 3.7339179675239677`*^9}, {
  3.7339180576504264`*^9, 3.733918236197213*^9}, {3.733918727317361*^9, 
  3.733918762591159*^9}, {3.7339188058385124`*^9, 3.7339188440587387`*^9}}]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1282, 657},
WindowMargins->{{60, Automatic}, {39, Automatic}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 618, 15, 50, "Input",
 CellID->484687852],
Cell[CellGroupData[{
Cell[1201, 39, 96, 1, 70, "Section"],
Cell[1300, 42, 1880, 49, 231, "Code"],
Cell[3183, 93, 9676, 237, 735, "Code"],
Cell[12862, 332, 9369, 222, 1005, "Code"],
Cell[22234, 556, 6998, 170, 825, "Code"]
}, Open  ]]
}
]
*)

